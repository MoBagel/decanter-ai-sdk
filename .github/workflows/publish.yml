name: publish

on:
  release:
    types:
      - created

jobs:
  build:
    name: release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.1.14"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Create Release Branch
        run: |
          git checkout -b release/$GITHUB_REF_NAME
          git push origin release/$GITHUB_REF_NAME

      - name: Install dependencies
        run: poetry build

      - name: Build and publish package
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          rm -rf dist
          if [ -f "$PYPI_TOKEN" ]; then
              echo "Token exists."
          else 
              echo "Token does not exist."
          fi
          poetry publish --build --username=__token__ --password=$PYPI_TOKEN
